#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language russian
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
Введение
\end_layout

\begin_layout Standard
В курсовой работе решается задача объединения парсинга данных и перевода
 их в текстовый вид.
 Задача решается в рамках языка Haskell - чистого функционального языка
 общего назначения с алгебраическими типами данных.
 Алгебраические типы данных представляют из себя типы, значениями которых
 являются значения некоторых иных типов, 
\begin_inset Quotes eld
\end_inset

обернутых
\begin_inset Quotes erd
\end_inset

 конструкторами алгебраического типа.
\end_layout

\begin_layout Standard
Примеры: вектор в двумерном пространстве, список:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

data Vector = Vector { x :: Float, y :: Float }
\end_layout

\begin_layout Plain Layout

data List a = Nil | Cons a (List a)
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Типы могут принадлежать классами типов, определяющими над ними определенные
 функции.
 Вывод типа в строку осуществляется с помощью функции show из класса Read.
 Считывание из строки осуществляется с помощью функции read из класса Show.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

show :: Show a => a -> String
\end_layout

\begin_layout Plain Layout

read :: Read a => String -> a
\end_layout

\end_inset


\end_layout

\begin_layout Standard
В Haskell существует механизм производных экземпряров, когда тип можно сделать
 экземпляром стандартных классов, в том числе Read и Show.
 В этом случае текстовое представление соответствует тому, которых используется
 в самом Haskell.
 Обычно это неприемлемо, и приходится самому писать отдельно парсер и принтер
 для нужного представления, так как в данных момент не существует готового
 к практическоу использованию средства, позволяющего решить эти задачи одновреме
нно.
 В итоге нарушается принцип DRY, код становится более трудно поддерживать.
\end_layout

\begin_layout Standard
В данный момент существует две работы: 
\begin_inset CommandInset citation
LatexCommand cite
key "inveritible"

\end_inset

 и 
\begin_inset CommandInset citation
LatexCommand cite
key "replaying"

\end_inset

, в которых схожая задача решается с помощью введения функций, работающих
 в обоих направлениях, и описания парсинга и принтинга на их основе, что
 больше похоже на разбиение проблемы на подпроблемы, вместо её решения.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "inveritible"

\end_inset

T.
 Rendel and K.
 Ostermann.
 Invertible syntax descriptions: unifying parsing and pretty printing.
 In J.
 Gibbons, editor, 
\shape italic
Haskell
\shape default
, pages 1–12.
 ACM, 2010.
 ISBN 978-1-4503-0252-4.
\end_layout

\begin_layout Bibliography
\begin_inset CommandInset bibitem
LatexCommand bibitem
key "replaying"

\end_inset

М.
 Boespflug.
 Functional Pearl: Replaying the stack for parsing and pretty printing.
\end_layout

\end_body
\end_document
